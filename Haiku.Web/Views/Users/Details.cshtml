@model Haiku.Web.ViewModels.MyHaikusListViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@section styles {
    @Styles.Render("~/Content/PagedList.css")
    @Styles.Render("~/Content/rateit.css")
    @Styles.Render("~/Content/haikus.min.css")
}

@{
    ViewBag.Title = "Haikus";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />

<div class="haikus-container container-fluid">
    @foreach (var haiku in Model.Haikus)
    {
        <div class="haikus-container-item">
            <div class="first-panel">
                @Html.TextAreaFor(modelItem => haiku.Text, htmlAttributes: new { @disabled = "disabled" })
                @Html.ActionLink("Delete", "Delete", "Haikus", new { id = haiku.Id }, new { @class = "btn btn-danger side-btn" })
                @Html.ActionLink("Edit", "Edit", "Haikus", new { id = haiku.Id }, new { @class = "btn btn-primary side-btn" })
                @Html.ActionLink("Details", "Details", "Haikus", new { id = haiku.Id }, new { @class = "btn btn-primary side-btn" })
            </div>
            <span class="second-panel">
                @Html.DisplayFor(modelItem => haiku.Author)
                <span class="text-danger">
                    @{var rating = string.Format(System.Globalization.CultureInfo.GetCultureInfo("en-US"), "{0:0.00}", haiku.Rating); }
                    <span class="rating-stars">
                        <span class="rateit" id="rating" data-rateit-value="@rating" data-rateit-max="5" data-rateit-step="0.01" data-rateit-resetable="false" data-rateit-readonly="true"></span>
                    </span>
                    <span class="rating-numeric">@Html.DisplayFor(modelItem => rating)</span>
                </span>
            </span>
        </div>

        <div class="divider"></div>
    }
</div>

@if (Model.Haikus.PageCount != 0)
{
    @:Page @Model.Haikus.PageNumber of @Model.Haikus.PageCount
}
else
{
    @:No haikus yet.
}
@Html.PagedListPager(Model.Haikus, page => Url.Action("Details",
    new { Skip = (page - 1) * Model.QueryParams.Take, Take = Model.QueryParams.Take }))

@section scripts {
    @Scripts.Render("~/Scripts/jquery.rateit.min.js")
    @Scripts.Render("~/Scripts/rating.js")
}