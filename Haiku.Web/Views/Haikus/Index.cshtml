@model Haiku.Web.ViewModels.HaikusListViewModel

@{
    ViewBag.Title = "Haikus";
}

@using (Html.BeginForm("Index", "Haikus", FormMethod.Get))
{
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.QueryParams.SortBy, "Sort by:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.QueryParams.SortBy, Model.SortOptions)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.QueryParams.Order, "Order:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.QueryParams.Order, Model.OrderOptions)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Apply" class="btn btn-primary" id="apply-button" />
            </div>
        </div>
    </div>
}

<div class="haikus-container">
    @foreach (var haiku in Model.Haikus)
    {
        <div class="haiku-container-item">
            @Html.DisplayFor(modelItem => haiku.Text)
            @Html.DisplayFor(modelItem => haiku.Rating)
            @Html.DisplayFor(modelItem => haiku.Author)
            @Html.ActionLink("Details", "Details", "Haikus", new { id = haiku.Id }, null)
            @Html.ActionLink("Edit", "Edit", "Haikus", new { id = haiku.Id }, null)
            @Html.ActionLink("Delete", "Delete", "Haikus", new { id = haiku.Id }, null)
        </div>
    }
</div>